name: Frontend CI/CD

# Add concurrency control to prevent multiple runs for the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ '**' ]
    paths:
      - 'nextjs/**'
      - '.github/workflows/frontend-ci-cd.yml'
    paths-ignore:
      - 'nextjs/README.md'
      - '*.md'
  pull_request:
    branches: [ '**' ]
    paths:
      - 'nextjs/**'
      - '.github/workflows/frontend-ci-cd.yml'
    paths-ignore:
      - 'nextjs/README.md'
      - '*.md'
  workflow_dispatch:

jobs:
  # ==========================================
  # CI STAGES
  # ==========================================
  
  lint:
    name: üîç Lint Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./nextjs
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: nextjs/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint

  test:
    name: üß™ Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./nextjs
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: nextjs/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test -- --coverage --watchAll=false
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          directory: ./nextjs/coverage
          flags: frontend
          name: frontend-coverage

  build:
    name: üèóÔ∏è Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: ./nextjs
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: nextjs/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: nextjs/.next/
          retention-days: 7

  # ==========================================
  # CD STAGES (STUBBED)
  # ==========================================
  
  deploy-staging:
    name: üöÄ Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build]
    if: |
      (github.event_name == 'pull_request') ||
      (github.ref == 'refs/heads/develop' && github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch') ||
      (contains(github.event.head_commit.message, '[deploy-staging]') && github.event_name == 'push')
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: nextjs/.next/
      
      - name: Deploy to staging (stubbed)
        run: |
          echo "üöß Staging deployment would happen here"
          echo "üì¶ Artifacts downloaded and ready for deployment"
          echo "üîß TODO: Implement actual staging deployment logic"

  deploy-production:
    name: üåü Deploy to Production
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: 
      name: production
      url: https://your-production-url.com
    
    steps:
      - name: Manual approval checkpoint
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: vitaovich
          minimum-approvals: 1
          issue-title: "Production Deployment Approval Required"
          issue-body: |
            Please review and approve the production deployment.
            
            **Branch:** ${{ github.ref }}
            **Commit:** ${{ github.sha }}
            **Author:** ${{ github.actor }}
            
            [View commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
      
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: nextjs/.next/
      
      - name: Deploy to production (stubbed)
        run: |
          echo "üöß Production deployment would happen here"
          echo "üì¶ Artifacts downloaded and ready for deployment"
          echo "üîß TODO: Implement actual production deployment logic"
          echo "‚úÖ Manual approval received for production deployment"